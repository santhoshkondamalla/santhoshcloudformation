{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Mappings": {
		"SubnetConfig": {
			"VPC": {
				"CIDR": "10.0.0.0/16"
			},
			"Public1": {
				"CIDR": "10.0.0.0/24"
			},
			"Public2": {
				"CIDR": "10.0.1.0/24"
			},
			"Private1": {
				"CIDR": "10.0.2.0/24"
			},
			"Private2": {
				"CIDR": "10.0.3.0/24"
			}
		}
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "VPC", "CIDR"]
				},
				"EnableDnsSupport": true,
				"EnableDnsHostnames": true,
				"InstanceTenancy": "default"
			}

		},
		"publicsubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": [0, {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Public1", "CIDR"]
				},
				"MapPublicIpOnLaunch": true
			}
		},
		"publicsubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": [1, {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Public2", "CIDR"]
				},
				"MapPublicIpOnLaunch": true
			}
		},
		"privatesubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": [0, {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Private1", "CIDR"]
				},
				"MapPublicIpOnLaunch": true
			}
		},
		"privatesubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"AvailabilityZone": {
					"Fn::Select": [1, {
						"Fn::GetAZs": ""
					}]
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "Private2", "CIDR"]
				},
				"MapPublicIpOnLaunch": true
			}
		},
		"publicroutetable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"privateroutetable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				}
			}
		},
		"mySubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "publicsubnet"
				},
				"RouteTableId": {
					"Ref": "publicroutetable"
				}
			}

		},

		"mySubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "privatesubnet"
				},
				"RouteTableId": {
					"Ref": "privateroutetable"
				}
			}

		},

		"mySubnetRouteTableAssociation3": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "publicsubnet1"
				},
				"RouteTableId": {
					"Ref": "publicroutetable"
				}
			}
		},


		"mySubnetRouteTableAssociation4": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "privatesubnet1"
				},
				"RouteTableId": {
					"Ref": "privateroutetable"
				}
			}

		},

		"myigw": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {}
		},

		"vpcIGWattachment": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "myigw"
				}
			}
		},

		"publicroute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "publicroutetable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "myigw"
				}
			},

			"DependsOn": [
				"vpcIGWattachment"
			]
		},

		"NAT": {
			"DependsOn": "vpcIGWattachment",
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["EIP", "AllocationId"]
				},
				"SubnetId": {
					"Ref": "publicsubnet"
				},
				"Tags": [{
					"Key": "foo",
					"Value": "bar"
				}]
			}
		},

		"EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},

		"privateRoute": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "privateroutetable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {
					"Ref": "NAT"
				}
			}
		}
	}
}
